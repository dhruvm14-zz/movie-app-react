[{"/Users/dhruvmittal/Programming/WEB D/movie-app/src/index.js":"1","/Users/dhruvmittal/Programming/WEB D/movie-app/src/App.js":"2","/Users/dhruvmittal/Programming/WEB D/movie-app/src/requests.js":"3","/Users/dhruvmittal/Programming/WEB D/movie-app/src/components/Header/Header.js":"4","/Users/dhruvmittal/Programming/WEB D/movie-app/src/components/MovieRow/MovieRow.js":"5","/Users/dhruvmittal/Programming/WEB D/movie-app/src/axios.js":"6","/Users/dhruvmittal/Programming/WEB D/movie-app/src/components/Movie/Movie.js":"7","/Users/dhruvmittal/Programming/WEB D/movie-app/src/components/Content/Content.js":"8","/Users/dhruvmittal/Programming/WEB D/movie-app/src/containers/Home/Home.js":"9","/Users/dhruvmittal/Programming/WEB D/movie-app/src/components/Navbar/Navbar.js":"10","/Users/dhruvmittal/Programming/WEB D/movie-app/src/containers/Search/Search.js":"11","/Users/dhruvmittal/Programming/WEB D/movie-app/src/containers/MovieHome/MovieHome.js":"12","/Users/dhruvmittal/Programming/WEB D/movie-app/src/containers/SearchGenre/SearchGenre.js":"13","/Users/dhruvmittal/Programming/WEB D/movie-app/src/components/BigMovie/BigMovie.js":"14","/Users/dhruvmittal/Programming/WEB D/movie-app/src/components/CastRow/CastRow.js":"15","/Users/dhruvmittal/Programming/WEB D/movie-app/src/components/CastRow/Cast/Cast.js":"16","/Users/dhruvmittal/Programming/WEB D/movie-app/src/Auth.js":"17","/Users/dhruvmittal/Programming/WEB D/movie-app/src/firebase.js":"18","/Users/dhruvmittal/Programming/WEB D/movie-app/src/containers/Login/Login.js":"19","/Users/dhruvmittal/Programming/WEB D/movie-app/src/containers/SignUp/SignUp.js":"20","/Users/dhruvmittal/Programming/WEB D/movie-app/src/containers/Favourite/Favourite.js":"21"},{"size":250,"mtime":1615033231631,"results":"22","hashOfConfig":"23"},{"size":1766,"mtime":1615122150899,"results":"24","hashOfConfig":"23"},{"size":1360,"mtime":1613553607942,"results":"25","hashOfConfig":"23"},{"size":1877,"mtime":1613103648994,"results":"26","hashOfConfig":"23"},{"size":1193,"mtime":1613849716241,"results":"27","hashOfConfig":"23"},{"size":133,"mtime":1610026560882,"results":"28","hashOfConfig":"23"},{"size":1049,"mtime":1612557712778,"results":"29","hashOfConfig":"23"},{"size":2517,"mtime":1615044324231,"results":"30","hashOfConfig":"23"},{"size":933,"mtime":1612554161023,"results":"31","hashOfConfig":"23"},{"size":2686,"mtime":1615122316779,"results":"32","hashOfConfig":"23"},{"size":1293,"mtime":1613850364436,"results":"33","hashOfConfig":"23"},{"size":4951,"mtime":1615102499278,"results":"34","hashOfConfig":"23"},{"size":1454,"mtime":1615117720499,"results":"35","hashOfConfig":"23"},{"size":2716,"mtime":1615044888413,"results":"36","hashOfConfig":"23"},{"size":370,"mtime":1615045747212,"results":"37","hashOfConfig":"23"},{"size":825,"mtime":1613590659899,"results":"38","hashOfConfig":"23"},{"size":561,"mtime":1615122054472,"results":"39","hashOfConfig":"23"},{"size":545,"mtime":1615033072220,"results":"40","hashOfConfig":"23"},{"size":2345,"mtime":1615121986035,"results":"41","hashOfConfig":"23"},{"size":3598,"mtime":1615121879668,"results":"42","hashOfConfig":"23"},{"size":1915,"mtime":1615120751062,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"ch2avp",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},"/Users/dhruvmittal/Programming/WEB D/movie-app/src/index.js",[],["94","95"],"/Users/dhruvmittal/Programming/WEB D/movie-app/src/App.js",["96"],"/Users/dhruvmittal/Programming/WEB D/movie-app/src/requests.js",[],"/Users/dhruvmittal/Programming/WEB D/movie-app/src/components/Header/Header.js",[],"/Users/dhruvmittal/Programming/WEB D/movie-app/src/components/MovieRow/MovieRow.js",[],"/Users/dhruvmittal/Programming/WEB D/movie-app/src/axios.js",[],"/Users/dhruvmittal/Programming/WEB D/movie-app/src/components/Movie/Movie.js",[],"/Users/dhruvmittal/Programming/WEB D/movie-app/src/components/Content/Content.js",["97","98","99","100","101"],"import { APIKey } from \"../../requests\";\nimport axios from \"../../axios\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport \"./Content.css\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport { Link } from \"react-router-dom\";\nimport firebase, { db } from \"../../firebase\";\nimport { AuthContext } from \"../../Auth\";\nconst imgBase = \"https://image.tmdb.org/t/p/original\";\n\nfunction Content(props) {\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const { currentUser } = useContext(AuthContext);\n\n  useEffect(() => {\n    if (selectedMovie && selectedMovie.id === props.movieId) return;\n    const getData = async () => {\n      const Data = await axios.get(\n        `/movie/${props.movieId}?api_key=${APIKey}&language=en-US`\n      );\n      setSelectedMovie(Data.data);\n    };\n    getData();\n  }, [props.movieId]);\n\n  if (selectedMovie) {\n    const day = new Date(selectedMovie.release_date);\n  }\n\n  return (\n    selectedMovie && (\n      <div className=\"Content\">\n        <div className=\"Content__text\">\n          <h2 className=\"Context__title\">\n            {selectedMovie?.title ||\n              selectedMovie?.original_title ||\n              selectedMovie?.original_name}\n          </h2>\n          <p className=\"Content__overview\">{selectedMovie.overview}</p>\n          <div className=\"content_info\">\n            <p>\n              Genre :\n              {selectedMovie.genres.map((genre) => {\n                return (\n                  <Link\n                    className=\"content__genre\"\n                    to={`/genre/${genre.id}/${genre.name}`}\n                  >\n                    {genre.name}\n                  </Link>\n                );\n              })}\n            </p>\n            <p>\n              Release Date :{\" \"}\n              {new Date(selectedMovie.release_date).toDateString()}\n            </p>\n            <p>Run Time : {selectedMovie.runtime} Minutes</p>\n            <a className=\"content__link\" href={`/movie/${selectedMovie.id}`}>\n              READ MORE\n            </a>\n          </div>\n        </div>\n        <div\n          className=\"Content__img\"\n          style={{\n            backgroundImage: `url(\n            ${imgBase}${selectedMovie.backdrop_path}\n          )`,\n          }}\n        >\n          <div className=\"Content__fade\"></div>\n        </div>\n        <button\n          onClick={() => {\n            setSelectedMovie(null);\n          }}\n        >\n          <ClearIcon />\n        </button>\n      </div>\n    )\n  );\n}\n\nexport default Content;\n","/Users/dhruvmittal/Programming/WEB D/movie-app/src/containers/Home/Home.js",[],"/Users/dhruvmittal/Programming/WEB D/movie-app/src/components/Navbar/Navbar.js",["102","103","104"],"/Users/dhruvmittal/Programming/WEB D/movie-app/src/containers/Search/Search.js",[],"/Users/dhruvmittal/Programming/WEB D/movie-app/src/containers/MovieHome/MovieHome.js",["105"],"import React, { useState, useEffect, useContext } from \"react\";\nimport YouTube from \"react-youtube\";\nimport \"./MovieHome.css\";\nimport axios from \"axios\";\nimport { APIKey } from \"../../requests\";\nimport { useParams } from \"react-router\";\nimport BigMovie from \"../../components/BigMovie/BigMovie\";\nimport CastRow from \"../../components/CastRow/CastRow\";\nimport MovieRow from \"../../components/MovieRow/MovieRow\";\nimport firebase, { db } from \"../../firebase\";\nimport { AuthContext } from \"../../Auth\";\n\nfunction MovieHome() {\n  const { movieID } = useParams();\n  const { currentUser } = useContext(AuthContext);\n  const [movie, setmovie] = useState({ genres: [] });\n  const [cast, setcast] = useState({});\n  const [crew, setcrew] = useState([]);\n  const recommendedEndPoint = `/movie/${movieID}/recommendations?api_key=${APIKey}&language=en-US&page=1`;\n  const similarEndPoint = `/movie/${movieID}/similar?api_key=${APIKey}&language=en-US&page=1`;\n\n  useEffect(() => {\n    const getData = async () => {\n      const Data = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieID}?api_key=${APIKey}&language=en-US&append_to_response=videos,images`\n      );\n      let selectedMovie = { ...Data.data, isFav: false, isWatch: false };\n      await db\n        .collection(\"users\")\n        .doc(currentUser.uid)\n        .get()\n        .then((response) => {\n          response.data().favourite.forEach((movies) => {\n            if (selectedMovie.id === movies.id) selectedMovie.isFav = true;\n          });\n        });\n      await db\n        .collection(\"users\")\n        .doc(currentUser.uid)\n        .get()\n        .then((response) => {\n          response.data().watchLater.forEach((movies) => {\n            if (selectedMovie.id === movies.id) selectedMovie.isWatch = true;\n          });\n        });\n      setmovie(selectedMovie);\n    };\n    const getCrew = async () => {\n      const castData = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieID}/credits?api_key=${APIKey}&language=en-US`\n      );\n      setcast(castData.data);\n      setcrew(castData.data.crew);\n    };\n    getData();\n    getCrew();\n    window.scrollTo(0, 0);\n  }, [movieID]);\n\n  const addToFav = async () => {\n    console.log(currentUser.uid);\n    let selectedMovie = { ...movie, isFav: true };\n    await db\n      .collection(\"users\")\n      .doc(currentUser.uid)\n      .update({\n        favourite: firebase.firestore.FieldValue.arrayUnion({\n          ...selectedMovie,\n        }),\n      });\n    setmovie(selectedMovie);\n  };\n\n  const remFav = async () => {\n    console.log(movie);\n    await db\n      .collection(\"users\")\n      .doc(currentUser.uid)\n      .update({\n        favourite: firebase.firestore.FieldValue.arrayRemove({\n          ...movie,\n        }),\n      });\n    let selectedMovie = { ...movie, isFav: false };\n    setmovie(selectedMovie);\n  };\n\n  const addToWatch = async () => {\n    console.log(currentUser.uid);\n    let selectedMovie = { ...movie, isWatch: true };\n    await db\n      .collection(\"users\")\n      .doc(currentUser.uid)\n      .update({\n        watchLater: firebase.firestore.FieldValue.arrayUnion({\n          ...selectedMovie,\n        }),\n      });\n    setmovie(selectedMovie);\n  };\n\n  const remWatch = async () => {\n    console.log(movie);\n    await db\n      .collection(\"users\")\n      .doc(currentUser.uid)\n      .update({\n        watchLater: firebase.firestore.FieldValue.arrayRemove({\n          ...movie,\n        }),\n      });\n    let selectedMovie = { ...movie, isWatch: false };\n    setmovie(selectedMovie);\n  };\n  const opts = {\n    height: \"400\",\n    width: \"700\",\n    playerVars: {\n      autoplay: 1,\n      mute: 1,\n    },\n  };\n\n  return (\n    <div className=\"MovieHome\">\n      {movie && <BigMovie movie={movie} crew={crew} />}\n      <div className=\"movieHome__trailer\">\n        <div>\n          {movie.videos && movie.videos.results[0] && (\n            <YouTube videoId={movie.videos.results[0].key} opts={opts} />\n          )}\n        </div>\n        <div>\n          {!movie.isFav ? (\n            <button style={{ margin: \"5px\" }} onClick={addToFav}>\n              ADD TO FAV\n            </button>\n          ) : (\n            <button style={{ margin: \"5px\" }} onClick={remFav}>\n              REMOVE FAV\n            </button>\n          )}\n          {!movie.isWatch ? (\n            <button style={{ margin: \"5px\" }} onClick={addToWatch}>\n              ADD TO WATCH LATER\n            </button>\n          ) : (\n            <button style={{ margin: \"5px\" }} onClick={remWatch}>\n              REMOVE WATCH LATER\n            </button>\n          )}\n        </div>\n      </div>\n      {cast.cast && <CastRow cast={cast.cast} title=\"CAST\" />}\n      {crew && <CastRow cast={crew} title=\"CREW\" />}\n      <MovieRow\n        title=\"Recommended Movies \"\n        endPoint={recommendedEndPoint}\n        isLarge\n      />\n      <MovieRow title=\"Similar Movies \" endPoint={similarEndPoint} isLarge />\n    </div>\n  );\n}\n\nexport default MovieHome;\n","/Users/dhruvmittal/Programming/WEB D/movie-app/src/containers/SearchGenre/SearchGenre.js",[],"/Users/dhruvmittal/Programming/WEB D/movie-app/src/components/BigMovie/BigMovie.js",["106"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./BigMovie.css\";\nconst imgBase = \"https://image.tmdb.org/t/p/original\";\n\nconst BigMovie = ({ movie, crew }) => {\n  const [Director, setDirector] = useState({ name: \"\" });\n  console.log(crew);\n  useEffect(() => {\n    crew.forEach((crew) => {\n      if (crew[\"job\"] === \"Director\") {\n        setDirector(crew);\n        return;\n      }\n    });\n  }, [crew]);\n\n  const rating = Number(movie.vote_average);\n  let ratingColor = \"red\";\n  if (rating >= 8) ratingColor = \"green\";\n  else if (rating >= 7 && rating < 8) ratingColor = \"orange\";\n\n  return (\n    <div\n      className=\"moviehome__header\"\n      style={{ backgroundImage: `url(${imgBase}${movie.backdrop_path})` }}\n    >\n      <div class=\"card\">\n        <div class=\"card_left\">\n          <img src={imgBase + movie.poster_path} />\n        </div>\n        <div class=\"card_right\">\n          <h1>\n            {movie?.title || movie?.original_title || movie?.original_name}\n          </h1>\n          <div class=\"card_right__details\">\n            <ul>\n              <li>{new Date(movie.release_date).getFullYear()}</li>\n              <li>{movie.runtime} min</li>\n            </ul>\n            <ul>\n              {movie.genres.slice(0, 4).map((genre, index) => {\n                return (\n                  <li>\n                    <Link\n                      key={index++}\n                      className=\"bigmovie__link\"\n                      to={`/genre/${genre.id}/${genre.name}`}\n                    >\n                      {genre.name}\n                    </Link>\n                  </li>\n                );\n              })}\n            </ul>\n            <div class=\"card_right__review\">\n              <p>{movie.overview && movie.overview.slice(0, 250)}...</p>\n            </div>\n            <div className=\"bigmovie__dir\">Director : {Director.name}</div>\n            <div className=\"bigmovie__rating\">\n              Rating :\n              <span\n                style={{\n                  fontSize: \"30px\",\n                  color: ratingColor,\n                  paddingLeft: \"5px\",\n                }}\n              >\n                {movie.vote_average}\n              </span>\n              /10\n            </div>\n            <div className=\"bigmovie__runtime\">\n              Runtime : {movie.runtime} min\n            </div>\n\n            {/* <div class=\"card_right__button\">\n              <a\n                href=\"https://www.youtube.com/watch?v=ot6C1ZKyiME\"\n                target=\"_blank\"\n              >\n                WATCH TRAILER\n              </a>\n            </div> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BigMovie;\n","/Users/dhruvmittal/Programming/WEB D/movie-app/src/components/CastRow/CastRow.js",[],"/Users/dhruvmittal/Programming/WEB D/movie-app/src/components/CastRow/Cast/Cast.js",["107"],"import React from \"react\";\nimport \"./Cast.css\";\nconst imgBase = \"https://image.tmdb.org/t/p/original\";\n\nfunction Cast({ cast }) {\n  return (\n    <div className=\"cast\">\n      <div className=\"cast__img\">\n        <img\n          className={cast.profile_path ? \"\" : \"cast_ava\"}\n          src={\n            cast.profile_path == null\n              ? \"http://www.gravatar.com/avatar/?d=mp&&s=190\"\n              : `${imgBase}${cast.profile_path}`\n          }\n        />\n      </div>\n      <div className=\"cast__content\">\n        <p style={{ fontSize: \"20px\", marginTop: \"5px\" }}>\n          <strong>{cast.name}</strong>\n        </p>\n        <p style={{ fontSize: \"15px\", marginTop: \"5px\", marginBottom: \"10px\" }}>\n          {cast.character ? cast.character : cast.job}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Cast;\n","/Users/dhruvmittal/Programming/WEB D/movie-app/src/Auth.js",["108"],"/Users/dhruvmittal/Programming/WEB D/movie-app/src/firebase.js",[],"/Users/dhruvmittal/Programming/WEB D/movie-app/src/containers/Login/Login.js",["109","110","111"],"import React, { useState, useContext } from \"react\";\nimport { withRouter, Redirect, Link } from \"react-router-dom\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport { AuthContext } from \"../../Auth\";\nimport { auth } from \"../../firebase\";\n\nfunction AdminLogin({ history }) {\n  const [user, setuser] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    try {\n      await auth.signInWithEmailAndPassword(email.trim(), password);\n      history.push(\"/\");\n    } catch (error) {\n      console.log(email);\n      alert(error);\n    }\n  };\n\n  const { currentUser } = useContext(AuthContext);\n  if (currentUser) {\n    console.log(currentUser);\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"SignUp\">\n      <div className=\"formGroup\">\n        <LockOpenIcon style={{ fontSize: \"3rem\", paddingBottom: \"10px\" }} />\n        <h1 style={{ letterSpacing: \"5px\", fontSize: \"3rem\" }}>SIGN IN</h1>\n        <form onSubmit={handleLogin} id=\"signup\">\n          <div class=\"group\">\n            <input\n              required\n              id=\"email\"\n              autoComplete=\"email\"\n              type=\"email\"\n              name=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n            />\n            <span class=\"highlight\"></span>\n            <span class=\"bar\"></span>\n            <label>Email</label>\n          </div>\n\n          <div class=\"group\">\n            <input\n              type=\"text\"\n              required\n              id=\"password\"\n              autoComplete=\"current-password\"\n              type=\"Password\"\n              name=\"name\"\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n            />\n            <span class=\"highlight\"></span>\n            <span class=\"bar\"></span>\n            <label>Password</label>\n          </div>\n\n          <button\n            className=\"signupButton\"\n            style={{ left: \"60px\" }}\n            type=\"submit\"\n          >\n            Submit\n          </button>\n        </form>\n        <Link to=\"/signup\" className=\"signup__link\">\n          Don't have an account ? SIGN UP\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(AdminLogin);\n","/Users/dhruvmittal/Programming/WEB D/movie-app/src/containers/SignUp/SignUp.js",["112"],"import React, { useState, useContext } from \"react\";\nimport { withRouter, Redirect, Link } from \"react-router-dom\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport { AuthContext } from \"../../Auth\";\nimport { auth, db } from \"../../firebase\";\nimport \"./Signup.css\";\n\nfunction AdminLogin({ history }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [fname, setfname] = useState(\"\");\n  const [lname, setlname] = useState(\"\");\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    try {\n      await auth\n        .createUserWithEmailAndPassword(email.trim(), password)\n        .then((cred) => {\n          return db.collection(\"users\").doc(cred.user.uid).set({\n            firstName: fname,\n            lastName: lname,\n            favourite: [],\n            watchLater: [],\n          });\n        });\n      history.push(\"/\");\n    } catch (error) {\n      console.log(email);\n      alert(error);\n    }\n  };\n\n  const { currentUser } = useContext(AuthContext);\n  if (currentUser) {\n    console.log(currentUser);\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"SignUp\">\n      <div className=\"formGroup\">\n        <LockOpenIcon style={{ fontSize: \"3rem\", paddingBottom: \"10px\" }} />\n        <h1 style={{ letterSpacing: \"5px\", fontSize: \"3rem\" }}>SIGN UP</h1>\n        <form onSubmit={handleLogin} id=\"signup\">\n          <div className=\"signup__name\">\n            <div class=\"group\">\n              <input\n                required\n                id=\"First Name\"\n                type=\"text\"\n                name=\"First Name\"\n                onChange={(e) => setfname(e.target.value)}\n                value={fname}\n              />\n              <span class=\"highlight\"></span>\n              <span class=\"bar\"></span>\n              <label>First Name</label>\n            </div>\n            <div class=\"group\">\n              <input\n                required\n                id=\"Last Name\"\n                type=\"text\"\n                name=\"Last Name\"\n                onChange={(e) => setlname(e.target.value)}\n                value={lname}\n              />\n              <span class=\"highlight\"></span>\n              <span class=\"bar\"></span>\n              <label>Last Name</label>\n            </div>\n          </div>\n          <div className=\"signup__name\">\n            <div class=\"group\">\n              <input\n                required\n                id=\"email\"\n                autoComplete=\"email\"\n                type=\"email\"\n                name=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n                value={email}\n              />\n              <span class=\"highlight\"></span>\n              <span class=\"bar\"></span>\n              <label>Email</label>\n            </div>\n\n            <div class=\"group\">\n              <input\n                type=\"text\"\n                required\n                id=\"password\"\n                autoComplete=\"current-password\"\n                type=\"Password\"\n                name=\"name\"\n                onChange={(e) => setPassword(e.target.value)}\n                value={password}\n              />\n              <span class=\"highlight\"></span>\n              <span class=\"bar\"></span>\n              <label>Password</label>\n            </div>\n          </div>\n          <button className=\"signupButton\" type=\"submit\">\n            Submit\n          </button>\n        </form>\n        <Link to=\"/\" className=\"signup__link\">\n          Already have an account? SIGN IN\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(AdminLogin);\n","/Users/dhruvmittal/Programming/WEB D/movie-app/src/containers/Favourite/Favourite.js",["113","114"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams } from \"react-router\";\nimport Movie from \"../../components/Movie/Movie\";\nimport \"./Favourite.css\";\nimport { Link } from \"react-router-dom\";\nimport firebase, { db } from \"../../firebase\";\nimport { AuthContext } from \"../../Auth\";\n\nfunction Favourite() {\n  const [moviesData1, setMoviesData1] = useState([]);\n  const [moviesData2, setMoviesData2] = useState([]);\n  const { currentUser } = useContext(AuthContext);\n  const { query } = useParams();\n  useEffect(() => {\n    const getData = async () => {\n      const movies1 = [];\n      const movies2 = [];\n\n      await db\n        .collection(\"users\")\n        .doc(currentUser.uid)\n        .get()\n        .then((response) => {\n          response.data().favourite.forEach((movie) => {\n            movies1.push(movie);\n          });\n        });\n      await db\n        .collection(\"users\")\n        .doc(currentUser.uid)\n        .get()\n        .then((response) => {\n          response.data().watchLater.forEach((movie) => {\n            movies2.push(movie);\n          });\n        });\n      setMoviesData1(movies1);\n      setMoviesData2(movies2);\n    };\n    getData();\n  }, []);\n\n  return (\n    <div className=\"Search\">\n      <p className=\"searchgenre__header\">\n        {query === \"favourite\" ? \"FAVOURITE\" : \"WATCH LATER\"}\n      </p>\n      <div className=\"search__gmovies\">\n        {query === \"favourite\"\n          ? moviesData1.map((movie) => (\n              <Link className=\"text-link\" to={`/movie/${movie.id}`}>\n                <Movie key={movie.id} movie={movie} search large />\n              </Link>\n            ))\n          : moviesData2.map((movie) => (\n              <Link className=\"text-link\" to={`/movie/${movie.id}`}>\n                <Movie key={movie.id} movie={movie} search large />\n              </Link>\n            ))}\n      </div>\n    </div>\n  );\n}\nexport default Favourite;\n",{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":18},{"ruleId":"119","severity":1,"message":"123","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":16},{"ruleId":"119","severity":1,"message":"124","line":7,"column":20,"nodeType":"121","messageId":"122","endLine":7,"endColumn":22},{"ruleId":"119","severity":1,"message":"125","line":13,"column":11,"nodeType":"121","messageId":"122","endLine":13,"endColumn":22},{"ruleId":"126","severity":1,"message":"127","line":24,"column":6,"nodeType":"128","endLine":24,"endColumn":21,"suggestions":"129"},{"ruleId":"119","severity":1,"message":"130","line":27,"column":11,"nodeType":"121","messageId":"122","endLine":27,"endColumn":14},{"ruleId":"119","severity":1,"message":"131","line":1,"column":27,"nodeType":"121","messageId":"122","endLine":1,"endColumn":37},{"ruleId":"119","severity":1,"message":"120","line":2,"column":16,"nodeType":"121","messageId":"122","endLine":2,"endColumn":24},{"ruleId":"119","severity":1,"message":"132","line":4,"column":10,"nodeType":"121","messageId":"122","endLine":4,"endColumn":21},{"ruleId":"126","severity":1,"message":"133","line":58,"column":6,"nodeType":"128","endLine":58,"endColumn":15,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":30,"column":11,"nodeType":"137","endLine":30,"endColumn":52},{"ruleId":"135","severity":1,"message":"136","line":9,"column":9,"nodeType":"137","endLine":16,"endColumn":11},{"ruleId":"119","severity":1,"message":"123","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":16},{"ruleId":"119","severity":1,"message":"138","line":8,"column":10,"nodeType":"121","messageId":"122","endLine":8,"endColumn":14},{"ruleId":"119","severity":1,"message":"139","line":8,"column":16,"nodeType":"121","messageId":"122","endLine":8,"endColumn":23},{"ruleId":"140","severity":1,"message":"141","line":56,"column":15,"nodeType":"142","endLine":56,"endColumn":30},{"ruleId":"140","severity":1,"message":"141","line":96,"column":17,"nodeType":"142","endLine":96,"endColumn":32},{"ruleId":"119","severity":1,"message":"123","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":16},{"ruleId":"126","severity":1,"message":"133","line":41,"column":6,"nodeType":"128","endLine":41,"endColumn":8,"suggestions":"143"},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'firebase' is defined but never used.","'db' is defined but never used.","'currentUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectedMovie'. Either include it or remove the dependency array.","ArrayExpression",["146"],"'day' is assigned a value but never used.","'useContext' is defined but never used.","'AuthContext' is defined but never used.","React Hook useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.",["147"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'user' is assigned a value but never used.","'setuser' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["148"],"no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [props.movieId, selectedMovie]",{"range":"155","text":"156"},"Update the dependencies array to be: [currentUser.uid, movieID]",{"range":"157","text":"158"},"Update the dependencies array to be: [currentUser.uid]",{"range":"159","text":"160"},[833,848],"[props.movieId, selectedMovie]",[2155,2164],"[currentUser.uid, movieID]",[1195,1197],"[currentUser.uid]"]